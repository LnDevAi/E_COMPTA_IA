version: 1

# ===================================================
# AWS AMPLIFY BUILD CONFIGURATION - E-COMPTA-IA
# Configuration optimis√©e pour Angular + Backend
# ===================================================

# Configuration des variables d'environnement
env:
  variables:
    # Angular configuration
    NODE_ENV: production
    NG_CLI_ANALYTICS: false
    
    # Application configuration
    APP_NAME: e-compta-ia
    APP_VERSION: 1.0.0
    
    # Timezone pour l'Afrique de l'Ouest
    TZ: Africa/Ouagadougou

# Configuration du backend (API, Database, Auth)
backend:
  phases:
    preBuild:
      commands:
        - echo "üîß Configuration du backend Amplify..."
        - npm ci --cache .npm --prefer-offline --legacy-peer-deps
    build:
      commands:
        - echo "üèóÔ∏è D√©ploiement des ressources backend..."
        - amplify push --yes

# Configuration du frontend (Angular App)
frontend:
  phases:
    preBuild:
      commands:
        - echo "üì¶ Installation des d√©pendances frontend..."
        - node --version
        - npm --version
        - npm ci --cache .npm --prefer-offline --legacy-peer-deps
        
        # G√©n√©ration des types et mod√®les si n√©cessaire
        - echo "üîß G√©n√©ration des types Amplify..."
        - npx amplify codegen || echo "Codegen skipped (no schema yet)"
        
    build:
      commands:
        - echo "üèóÔ∏è Build de l'application Angular..."
        
        # Build optimis√© pour production
        - npm run build
        
        # V√©rifications post-build
        - echo "‚úÖ Build termin√©"
        - ls -la dist/
        - ls -la dist/e-compta-ia/ || echo "V√©rification structure dist"
        
  artifacts:
    # R√©pertoire de sortie apr√®s build Angular
    baseDirectory: dist/e-compta-ia
    files:
      - '**/*'
      
  cache:
    paths:
      # Cache pour acc√©l√©rer les builds
      - node_modules/**/*
      - .npm/**/*
      - dist/**/*

# Configuration du test (optionnel)
test:
  phases:
    preTest:
      commands:
        - echo "üß™ Pr√©paration des tests..."
        - npm ci --legacy-peer-deps
    test:
      commands:
        - echo "üß™ Ex√©cution des tests..."
        - npm run test:ci
        - echo "‚úÖ Tests termin√©s"
  artifacts:
    baseDirectory: test-results
    files:
      - '**/*'

# Configuration des custom headers pour SPA
customHeaders:
  - pattern: '**'
    headers:
      # Headers de s√©curit√©
      - key: 'X-Content-Type-Options'
        value: 'nosniff'
      - key: 'X-Frame-Options'
        value: 'DENY'
      - key: 'X-XSS-Protection'
        value: '1; mode=block'
      - key: 'Strict-Transport-Security'
        value: 'max-age=63072000; includeSubDomains; preload'
      - key: 'Referrer-Policy'
        value: 'strict-origin-when-cross-origin'
      
      # Headers pour Angular SPA
      - key: 'Cache-Control'
        value: 'no-cache, no-store, must-revalidate'
        
  # Cache pour les assets statiques
  - pattern: '/assets/**'
    headers:
      - key: 'Cache-Control'
        value: 'public, max-age=31536000, immutable'
        
  # Headers pour les fichiers JS/CSS
  - pattern: '**.js'
    headers:
      - key: 'Cache-Control'
        value: 'public, max-age=31536000, immutable'
  - pattern: '**.css'
    headers:
      - key: 'Cache-Control'
        value: 'public, max-age=31536000, immutable'

# Redirections pour Angular SPA
redirects:
  - source: '/<*>'
    target: '/index.html'
    status: 200
    condition: null

# Variables d'environnement pour diff√©rents environnements
environments:
  main:
    env:
      variables:
        ENVIRONMENT: production
        API_URL: https://api.e-compta-ia.com
        APP_DOMAIN: e-compta-ia.com
        
  develop:
    env:
      variables:
        ENVIRONMENT: staging
        API_URL: https://api-staging.e-compta-ia.com
        APP_DOMAIN: staging.e-compta-ia.com
        
  feature:
    env:
      variables:
        ENVIRONMENT: development
        API_URL: https://api-dev.e-compta-ia.com
        APP_DOMAIN: dev.e-compta-ia.com